version: '3.8'

services:
  # Service PostgreSQL
  postgres:
    image: postgres:14
    container_name: dounie-cuisine-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: dounie_user
      POSTGRES_PASSWORD: dounie_password
      POSTGRES_DB: dounie_cuisine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./seed.sql:/docker-entrypoint-initdb.d/2-seed.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dounie_user -d dounie_cuisine"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service Node.js pour l'application
  app:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: dounie-cuisine-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - VITE_PG_HOST=postgres
      - VITE_PG_PORT=5432
      - VITE_PG_DATABASE=dounie_cuisine
      - VITE_PG_USER=dounie_user
      - VITE_PG_PASSWORD=dounie_password
      - VITE_JWT_SECRET=votre_secret_jwt_tres_securise
      - VITE_JWT_EXPIRY=7d
      - VITE_ADMIN_EMAIL=admin@dounieculisine.ca
      - VITE_ADMIN_PASSWORD=Admin123!
    ports:
      - "5173:5173"
    volumes:
      - ../:/app
      - /app/node_modules

  # Service Nginx pour servir l'application (optionnel)
  nginx:
    image: nginx:alpine
    container_name: dounie-cuisine-nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/dounie-cuisine.conf:/etc/nginx/conf.d/default.conf
      - ../dist:/usr/share/nginx/html
      # DÃ©commentez pour utiliser SSL en production
      # - ./ssl:/etc/nginx/ssl
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80

volumes:
  postgres_data:
# Configuration Nginx pour Dounie Cuisine Pro
# Placez ce fichier dans /etc/nginx/sites-available/
# Puis créez un lien symbolique: ln -s /etc/nginx/sites-available/dounie-cuisine.conf /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name localhost;  # Remplacez par votre nom de domaine en production

    # Logs
    access_log /var/log/nginx/dounie-cuisine-access.log;
    error_log /var/log/nginx/dounie-cuisine-error.log;

    # Redirection vers HTTPS (décommentez en production)
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # }

    # Proxy vers l'application Node.js
    location / {
        proxy_pass http://localhost:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Servir les fichiers statiques directement
    location /assets {
        alias /home/project/dist/assets;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # Configuration pour les uploads (si nécessaire)
    # location /uploads {
    #     alias /var/www/dounie-cuisine/uploads;
    #     expires 30d;
    #     add_header Cache-Control "public, max-age=2592000";
    # }

    # Gestion des erreurs
    error_page 404 /404.html;
    location = /404.html {
        root /var/www/html;
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/html;
        internal;
    }

    # Sécurité
    # Désactiver l'affichage des informations sensibles
    server_tokens off;

    # Ajouter des en-têtes de sécurité
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Limiter la taille des requêtes
    client_max_body_size 10M;
}

# Configuration HTTPS (décommentez en production)
# server {
#     listen 443 ssl http2;
#     server_name localhost;  # Remplacez par votre nom de domaine
#
#     # Certificats SSL
#     ssl_certificate /etc/letsencrypt/live/votre-domaine.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/votre-domaine.com/privkey.pem;
#
#     # Paramètres SSL optimisés
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_session_tickets off;
#
#     # HSTS (décommentez en production)
#     # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
#
#     # Même configuration que pour HTTP
#     location / {
#         proxy_pass http://localhost:5173;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
#
#     # Autres configurations identiques à la section HTTP
# }